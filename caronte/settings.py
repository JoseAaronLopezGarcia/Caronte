"""
Django settings for caronte project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'awsnm%w)y4sx)hed^7ge)7k!i&%25qgap4@mo(xp-@(a3z60v*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


############ CARONTE CONFIGURATION ##############################

# Caronte version used to identify with client
CARONTE_ID = "Caronte Authentication Server"
CARONTE_VERSION = "0.9.1"

# File where Caronte issues logs (home by default)
CARONTE_LOG_FILE = "~/caronte_log.txt"

# Resetting a password using the same password is usually a bad idea
# However in Caronte it is a valid security measure as it re-encrypts the password using a new IV
CARONTE_ALLOW_SAME_PW_RESET = True

# The password derivation function in Caronte uses iterations to make it slower
# The higher the number the more time to calculate a derived password
# This ultimately leads to slower bruteforce attacks.
CARONTE_ANTI_BRUTEFORCE_ITERS = 50000

# User registration API should be disabled by default unless using HTTPS
CARONTE_ALLOW_REGISTRATION = True

# We don't want the user to issue an infinite ammount of tickets using the same token
CARONTE_MAX_TOKEN_COUNT = 10

############### DJANGO CONFIGURATION #######################

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR+'/sqlite3.db',
    }
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'caronte_server'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'caronte.urls'

WSGI_APPLICATION = 'caronte.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/caronte_client/'
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, 'caronte_client')
]
