/////////////////////////SUMMARY///////////////////////////////
- A - User
- B - Service Provider
- C - Caronte (Authentication Server)
A -> C // ticket(A)
B -> C // ticket(B)

A -> B // ticket(A)
B -> C // ticket(B) + ticket(A)
B <- C // cipher(key, pw_B) + cipher(key, pw_A)
B // decipher(key, pw_B) -> session key
A <- B // cipher(key, pw_A)
A // decipher(key, pw_A) -> session key
session_key(A) == session_key(B) -> symmetric encryption
////////////////////////////////////////////////////////////////

Alice: client (consumer of data or resource)
Bob: service provider (producer of data or resource)
Caronte: authentication and key distribution center
David: malicious attacker


BASIS OF AUTHENTICATION

Alice)                 Bob)						Caronte)
<-----------------------------------------------> handshake
                         <----------------------> handshake
--------------------> ticket -------------------> ticket(B) + ticket(A)
						<------------------------ ok
<------------------------ ok




MAN IN THE MIDDLE ATTACK!

Alice)     David)      Bob)						Caronte)
<------------<>-----------------------------------> Handshake
                         <------------------------> Handshake
------------->----------->-----------------------> ticket(B) + ticket(A)
             David acts as a relay point between Alice and Bob during authentication
             all it has to do is re-transmit tickets created by Alice to Bob without any modification
						<------------------------ ok
             <----------- ok
            David consumes the resources from Bob that were meant for Alice and denies it to Alice


MITM PROTECTION
The resources shared between Alice and Bob must be encrypted using a key only known to Alice and Bob.
There needs to be a safe way for Alice and Bob to share a common secret key only known to them.
Neither Alice nor Bob will want to share their user password for encryption.
The solution is to have Caronte generate and distribute the secret key to Alice and Bob.
When Caronte authenticates Alice to Bob, a secret key is generated.
Caronte sends two encrypted copies of this key, one for Alice and one for Bob.
Since Caronte knows both passwords for Alice and Bob, each copy is encrypted for each user.
Thus only Alice and Bob can decrypt the secret key and safely use it for encrypted communication.

A)			D)			B)						  C)
<------------<>-----------------------------------> Handshake
                         <------------------------> Handshake
------------>-------> ticket ---------------------> ticket = ticket(B) + ticket(A)
                                                   Caronte generates a random secret key and IV
<-----------<------------<------------------------ temp_iv + encrypt(secret_key, pw_B) + encrypt(secret_key, pw_A)
						decrypt(temp_pw, pw_B): Bob knows the temp key
decrypt(temp_pw, pw_A): Alice knows the temp key
            David can't decrypt the secret key without knowing Alice or Bob's password
<-----------x----------> communication between Alice and Bob is encrypted using temp key
            David can't read or write the data between Alice and Bob as the tempt key is not known
